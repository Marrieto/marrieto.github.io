---
layout: post
title:  "Why static site generators?"
date:   2017-11-13 13:10:43 +0100
categories: jekyll static sites site
---
Beskriv static sites, varför de är bra, lätt att ändra, fort att ändra, för enklare sidor, mindre projekt, marknadsföring av små företag
Hur fungerade jekyll, inlärningskuva
Framtiden, grafiskt interface?

*What is a static site generator?*
To explain what a static site generator is, you first must know what a static site is. A static site is according to [wikipedia](https://en.wikipedia.org/wiki/Static_web_page) "A static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application." A concrete example of this is how we can't put any comments under our blog posts without using Disqus.

But one doesn't always need to have a dynamic page, for example if you just want a site to show off your new project in school, or maybe a homepage for your dog, that's when static site generators comes in handy, because you can set these up very fast. For easier projects, static site generators are perfect.

*Jekyll*
Before you got your jekyll site up and running (depending on which OS you're running on) there's some setup to be done. But once you've downloaded some boilerplate, you basically have a site already, ready to customize so it fits your site.


You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
