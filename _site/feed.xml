<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-11-13T14:23:27+01:00</updated><id>http://localhost:4000/</id><title type="html">Martins examinations-blogg</title><subtitle>Här ser ni min fantastiska blogg. Hoppas att ni njuter av den även fast ni måste betygsätta den.</subtitle><entry><title type="html">Why static site generators?</title><link href="http://localhost:4000/jekyll/static/sites/site/2017/11/13/static-site-generators.html" rel="alternate" type="text/html" title="Why static site generators?" /><published>2017-11-13T13:10:43+01:00</published><updated>2017-11-13T13:10:43+01:00</updated><id>http://localhost:4000/jekyll/static/sites/site/2017/11/13/static-site-generators</id><content type="html" xml:base="http://localhost:4000/jekyll/static/sites/site/2017/11/13/static-site-generators.html">&lt;p&gt;Beskriv static sites, varför de är bra, lätt att ändra, fort att ändra, för enklare sidor, mindre projekt, marknadsföring av små företag
Hur fungerade jekyll, inlärningskuva
Framtiden, grafiskt interface?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What is a static site generator?&lt;/em&gt;
To explain what a static site generator is, you first must know what a static site is. A static site is according to &lt;a href=&quot;https://en.wikipedia.org/wiki/Static_web_page&quot;&gt;wikipedia&lt;/a&gt; “A static web page (sometimes called a flat page/stationary page) is a web page that is delivered to the user exactly as stored, in contrast to dynamic web pages which are generated by a web application.” A concrete example of this is how we can’t put any comments under our blog posts without using Disqus.&lt;/p&gt;

&lt;p&gt;But one doesn’t always need to have a dynamic page, for example if you just want a site to show off your new project in school, or maybe a homepage for your dog, that’s when static site generators comes in handy, because you can set these up very fast. For easier projects, static site generators are perfect.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Jekyll&lt;/em&gt;
Before you got your jekyll site up and running (depending on which OS you’re running on) there’s some setup to be done. But once you’ve downloaded some boilerplate, you basically have a site already, ready to customize so it fits your site.&lt;/p&gt;

&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Beskriv static sites, varför de är bra, lätt att ändra, fort att ändra, för enklare sidor, mindre projekt, marknadsföring av små företag Hur fungerade jekyll, inlärningskuva Framtiden, grafiskt interface?</summary></entry><entry><title type="html">How to disqus</title><link href="http://localhost:4000/disqus/jekyll/2017/11/10/how-to-disqus.html" rel="alternate" type="text/html" title="How to disqus" /><published>2017-11-10T11:25:43+01:00</published><updated>2017-11-10T11:25:43+01:00</updated><id>http://localhost:4000/disqus/jekyll/2017/11/10/how-to-disqus</id><content type="html" xml:base="http://localhost:4000/disqus/jekyll/2017/11/10/how-to-disqus.html">&lt;p&gt;One part of the assignement was to implement a way to put comments under our blog posts. This has to be done with a 3rd party
since every time I change something on the site, everything is re-built, meaning that there’s no way to save any data.&lt;/p&gt;

&lt;p&gt;I solved this using a plugin called Disqus. As they say on their site: “The internet’s favorite comment plug-in makes it easy for publishers to 
bring their content to life, fuel colorful discussions, efficiently moderate comments, and build engaged communities.”. Disqus is easy to implement, and 
even have support for jekyll based pages.&lt;/p&gt;

&lt;p&gt;I  &lt;a href=&quot;https://disqus.com/profile/signup/intent/&quot;&gt;created an account on Disqus&lt;/a&gt;, and followed the necessary steps that came up after choosing it should be a jekyll based site. 
After following the steps after, the whole process takes around five minutes if you’re quick.&lt;/p&gt;</content><author><name></name></author><summary type="html">One part of the assignement was to implement a way to put comments under our blog posts. This has to be done with a 3rd party since every time I change something on the site, everything is re-built, meaning that there’s no way to save any data.</summary></entry><entry><title type="html">Humans and robots</title><link href="http://localhost:4000/humans/robots/2017/11/10/humans-and-robots.html" rel="alternate" type="text/html" title="Humans and robots" /><published>2017-11-10T11:25:43+01:00</published><updated>2017-11-10T11:25:43+01:00</updated><id>http://localhost:4000/humans/robots/2017/11/10/humans-and-robots</id><content type="html" xml:base="http://localhost:4000/humans/robots/2017/11/10/humans-and-robots.html">&lt;p&gt;One part of our examination is to add two textdocuments called &lt;a href=&quot;humantxt.org&quot;&gt;&lt;em&gt;humans.txt&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;robotstxt.org&quot;&gt;&lt;em&gt;robots.txt&lt;/em&gt;&lt;/a&gt;. These files
exist to provide additional info to users of the site, wether it’s a person or a bot traversing the internet.&lt;/p&gt;

&lt;p&gt;The purpose of the &lt;em&gt;humans.txt&lt;/em&gt; is to give the user a way to get information about people, software and standards that have been used on
the site. In our &lt;em&gt;humans.txt&lt;/em&gt; I mention which software I’ve used, and also provides my email adress and more if a user would like to contact
me.&lt;/p&gt;

&lt;p&gt;On the web there’s not only humans browsing. There’s also programmed bots to gather information about the site, f.e Google, that uses a bot 
to help caching the site and makes it searchable. In our project our &lt;em&gt;robots.txt&lt;/em&gt; contains some lines that tell all the bots that checks the 
site to ignore it, by not giving them permission for any files or folders. I did this because this is only a temporary project site, and doesn’t need to&lt;br /&gt;
be cached.&lt;/p&gt;</content><author><name></name></author><summary type="html">One part of our examination is to add two textdocuments called humans.txt and robots.txt. These files exist to provide additional info to users of the site, wether it’s a person or a bot traversing the internet.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/11/03/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-11-03T15:25:43+01:00</published><updated>2017-11-03T15:25:43+01:00</updated><id>http://localhost:4000/jekyll/update/2017/11/03/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/11/03/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>